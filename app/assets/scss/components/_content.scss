@use "../theme/typography";
@use "../theme/palette";

/// HTML in a content element may be user-generated,
/// so styles will need to be applied based on tag name.
.content {
	@include typography.base-body;

	a {
		@include palette.link;
	}

	p:not(:last-child) {
		margin-bottom: calc(1em * var(--line-height));
	}

	hr {
		// Should be the same height as a paragraph, to match textarea content
		border: 0;
		margin: 0;
		position: relative;
		&::before {
			// Hold space for a single line of text
			content: "---";
			display: block;
			margin-bottom: calc(1em * var(--line-height));
			visibility: hidden;
		}
		&::after {
			content: "";
			position: absolute;
			top: calc(0.5em * var(--line-height));
			inset-inline: 0;
			border-bottom: 1px solid currentColor;
		}
	}

	h1, h2, h3, h4, h5, h6 {
		&:not(:last-child) {
			margin-bottom: 0.5em;
		}
	}

	code {
		@include palette.secondary;
		// About enough to compensate for "`"
		padding: 0 0.5ch;
		border-radius: 0.2em;

		word-break: break-word;
	}

	// This is how `marked` renders code blocks
	pre > code {
		display: block;
		width: fit-content;
		max-width: 100%;
		overflow: auto;
		tab-size: 4;
	}

	kbd {
		display: inline-block;
		// About enough to compensate for "`"
		padding: 0 0.5ch;
		border: 1px solid currentColor;
		border-radius: 0.5em;
	}
}
