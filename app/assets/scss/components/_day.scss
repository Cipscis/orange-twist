.day {
	margin: 2rem 0;

	isolation: isolate;

	&:not([open]) {
		content-visibility: auto;
		// Padding plus heading size
		contain-intrinsic-height: 2rem + rem(28px) * 1.5;
	}
}

.day__summary {
	@include contrast-primary;

	list-style: none;

	position: sticky;
	z-index: 2;
	top: -1px;
	padding-top: 1px;
	margin-inline: -1px;
	padding-inline: 1px;
}

.day__body {
	display: grid;
	justify-items: start;
	grid-template-columns: minmax(0, 1fr);
	gap: 1rem;
}

.day__heading {
	@include font-heading-3;

	width: 100%;

	padding-bottom: 0.2em;

	// TODO: Should this be a mixin?
	summary > & {
		display: inline-block;

		&::after {
			content: "";
			display: inline-block;
			margin-left: 1ch;
			vertical-align: middle;

			border: 0.25em solid transparent;

			transition: transform 0.1s ease-in-out;
		}
		details > &::after {
			border-left-color: currentColor;
			border-right-width: 0;
		}
		details[open] > &::after {
			transform: rotate(90deg);
		}
	}
}

.day__note {
	@include font-base-body;

	width: 100%;

	position: relative;
	--_gutter: 0.5em;

	textarea,
	.content:not(:empty) {
		border: 1px solid var(--accent);
	}
	.content:not(:empty) {
		padding: var(--_gutter);
	}

	.content {
		blockquote {
			margin-block: calc(1em * var(--line-height));
			&:first-child {
				margin-block-start: 0;
			}
			&:last-child {
				margin-block-end: 0;
			}

			// About enough to compensate for "> "
			margin-inline-start: 1.5ch;
		}

		ul {
			// About enough to compensate for bullets
			padding-left: 1.2ch;

			margin-block: calc(1em * var(--line-height));
			&:first-child {
				margin-block-start: 0;
			}
			&:last-child {
				margin-block-end: 0;
			}
		}

		// This is how `marked` renders code blocks
		pre > code {
			margin-block: calc(2em * var(--line-height));
			&:first-child {
				margin-block-start: 0;
			}
			&:last-child {
				margin-block-end: 0;
			}
		}
	}
}

.day__note-edit-content {
	// Using this approach:
	// https://css-tricks.com/auto-growing-inputs-textareas/
	display: grid;

	// Stack them on top of each other
	&::before,
	textarea {
		grid-area: 1 / -1 / -1 / -1;

		@include font-base-body;
		padding: var(--_gutter);
	}

	// Simulate content of textarea with visibility hidden, to auto-expand content
	&::before {
		content: attr(data-content) " ";
		white-space: pre-wrap;
		visibility: hidden;
	}

	textarea {
		@include contrast-primary;
		resize: none;
		overflow: hidden;
		border: 0;

		@include font-base-body;
	}
}

.date__note-display-content {
	position: relative;
}

.day__note-edit {
	@extend %icon-button;

	&:not(:first-child:last-child) {
		position: absolute;
		bottom: 0;
		right: 0;

		&:not(:focus) {
			overflow: hidden;
			width: 0;
			height: 0;
		}
	}
}
