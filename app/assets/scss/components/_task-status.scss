@use "../theme/animation";
@use "../theme/palette";
@use "../theme/shadow";
@use "../theme/spacing";

@use "../patterns";
@use "../tools" as *;

.task-status {
	position: relative;

	--_gap: #{spacing.$sm};

	&:has(.task-status__popover[open]) {
		anchor-name: --taskStatus;
	}
}

.task-status__popover {
	@supports (position-anchor: --taskStatus) {
		position: fixed;
		position-anchor: --taskStatus;

		inset-area: top span-right;
		position-try-fallbacks: flip-block;
	}
	@supports not(position-anchor: --taskStatus) {
		position: absolute;
		bottom: 100%;
	}
	margin: 0 0 spacing.$sm;
	z-index: 1;

	&[open] {
		animation: appearScreen animation.$speed-medium animation.$easing-default;
	}

	// It's not interactive or tabbable, so let it have no focus style
	&:focus-visible {
		outline: none;
	}
}

.task-status__options {
	@include list-reset;
	padding: var(--_gap);

	display: flex;
	gap: var(--_gap);

	@include palette.secondary;
	@include patterns.frosted-glass;

	& {
		border: 1px solid var(--accent);

		box-shadow: shadow.$accent;
	}
}

.task-status__optgroup {
	& + & {
		padding-inline-start: var(--_gap);
		border-inline-start: 1px solid var(--accent);
	}
}

.task-status__optgroup-list {
	@include list-reset;
	display: grid;
	grid-template-columns: repeat(3, 1fr);
	&:has(> :only-child) {
		grid-template-columns: 1fr;
	}
	&:has(> :first-child + :last-child) {
		grid-template-columns: repeat(2, 1fr);
	}
	& {
		gap: var(--_gap);
	}
}

.task-status__option {}
