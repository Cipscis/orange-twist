@use "sass:map";

/// A map of breakpoint labels to sizes, for use with breakpoint mixins
$_breakpoints: (
	"xs": 420px,
	"sm": 768px,
	"md": 1024px,
	"lg": 1440px,
	"xl": 1680px,
);

///////////////////////
// Breakpoint Mixins //
///////////////////////

/// Use a media query for width >= the specified size. Expects value as a length or as a string label e.g. `"md"`
/// @param {string | length} $from - A size label or size to use for the media query
@mixin from($from) {
	$fromVal: map.get($_breakpoints, $from);
	@if (not $fromVal) {
		$fromVal: $from;
	}

	@media (width >= $fromVal) {
		@content;
	}
}

/// Use a media query for widths < the specified size. Expects value as a length or as a string label e.g. `"md"`
/// @param {string | length} $to - A size label or size to use for the media query
@mixin to($to) {
	$toVal: map.get($_breakpoints, $to);
	@if (not $toVal) {
		$toVal: $to;
	}

	@media (width < $toVal) {
		@content;
	}
}

/// Use a media query for widths between the specified sizes. Expects values as a length or as a string label e.g. `"md"`
/// @param {string | length} $from - A size label or size to use for the lower bound of the media query
/// @param {string | length} $to - A size label or size to use for the upper bound of the media query
@mixin between($from, $to) {
	$fromVal: map.get($_breakpoints, $from);
	@if (not $fromVal) {
		$fromVal: $from;
	}

	$toVal: map.get($_breakpoints, $to);
	@if (not $toVal) {
		$toVal: $to;
	}

	@media ($fromVal <= width < $toVal) {
		@content;
	}
}
